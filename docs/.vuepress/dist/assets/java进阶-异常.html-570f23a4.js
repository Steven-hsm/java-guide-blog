import{_ as a,p as t,q as e,a1 as r}from"./framework-8fa3e4ce.js";const i="/java-guide-blog/assets/异常类层次图-13b59b59.png",l={},c=r('<h1 id="java进阶-异常" tabindex="-1"><a class="header-anchor" href="#java进阶-异常" aria-hidden="true">#</a> java进阶-异常</h1><p><img src="'+i+'" alt="异常类层次图.png"></p><h2 id="异常关键字" tabindex="-1"><a class="header-anchor" href="#异常关键字" aria-hidden="true">#</a> 异常关键字</h2><ul><li>try – 用于监听。将要被监听的代码(可能抛出异常的代码)放在try语句块之内，当try语句块内发生异常时，异常就被抛出。</li><li>catch – 用于捕获异常。catch用来捕获try语句块中发生的异常。</li><li>finally – finally语句块总是会被执行。它主要用于回收在try块里打开的物力资源(如数据库连接、网络连接和磁盘文件)。只有finally块，执行完成之后，才会回来执行try或者catch块中的return或者throw语句，如果finally中使用了return或者throw等终止方法的语句，则就不会跳回执行，直接停止。</li><li>throw – 用于抛出异常</li><li>用在方法签名中，用于声明该方法可能抛出的异常</li></ul>',4),n=[c];function s(h,o){return t(),e("div",null,n)}const d=a(l,[["render",s],["__file","java进阶-异常.html.vue"]]);export{d as default};
