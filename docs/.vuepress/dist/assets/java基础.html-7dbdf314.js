import{_ as e,M as p,p as t,q as l,R as a,t as n,N as i,V as o,a1 as c}from"./framework-8fa3e4ce.js";const d="/java-guide-blog/assets/java数据类型-1b068717.png",r={},u=a("h1",{id:"java基础",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#java基础","aria-hidden":"true"},"#"),n(" java基础")],-1),v=c(`<h2 id="一、简单的java程序" tabindex="-1"><a class="header-anchor" href="#一、简单的java程序" aria-hidden="true">#</a> 一、简单的java程序</h2><h3 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h3><ul><li><p>单行注释：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//单行注释</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>多行注释</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/*
 多行注释
*/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>文档注释</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 文档注释
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h3><p><img src="`+d+`" alt="image-20221218103214597"></p><h3 id="程序结构" tabindex="-1"><a class="header-anchor" href="#程序结构" aria-hidden="true">#</a> 程序结构</h3><p><strong>顺序结构</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">{</span>
    <span class="token comment">//逻辑代码一</span>
    <span class="token comment">//逻辑代码二</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>选择结构</strong></p><ul><li><p>if</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span><span class="token punctuation">(</span>x  <span class="token operator">&gt;</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//逻辑代码一</span>
<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>x <span class="token operator">&gt;</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//逻辑代码二</span>
<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
    <span class="token comment">//逻辑代码三</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>switch</p></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">switch</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>逻辑代码一
    	<span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>逻辑代码二
    	<span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>逻辑代码三
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>循环结构</strong></p><ul><li><p>while</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">while</span><span class="token punctuation">(</span>x <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    x <span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token comment">//业务逻辑处理</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>do...while</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">do</span><span class="token punctuation">{</span>
    x<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token comment">//业务逻辑代码</span>
<span class="token punctuation">}</span><span class="token keyword">while</span><span class="token punctuation">(</span>x<span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>for</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//业务逻辑代码</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>循环中断语句</p><ul><li>break: 中断循环</li><li>contine: 中断本次执行</li></ul></li></ul><h3 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h3><ul><li><p>数组声明</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>数据类型 数组名<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> 数据类型<span class="token punctuation">[</span>数组长度<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> intArray<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>数组静态初始化</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> score<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h3><p><strong>三目运算符</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> greaterZero <span class="token operator">=</span> x <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span>  <span class="token boolean">true</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,18);function k(m,b){const s=p("RouterLink");return t(),l("div",null,[u,a("p",null,[n("推荐阅读"),i(s,{to:"/"},{default:o(()=>[n("java开发实战经典")]),_:1})]),v])}const h=e(r,[["render",k],["__file","java基础.html.vue"]]);export{h as default};
